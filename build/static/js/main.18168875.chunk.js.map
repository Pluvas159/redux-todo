{"version":3,"sources":["Task.js","actions/index.js","TaskForm.js","App.js","reducers/tasksReducer.js","reducers/filterReducer.js","reducers/index.js","index.js"],"names":["Task","status","text","id","filterOfTasks","ifNothing","className","props","onClick","e","preventDefault","change_task","class","edit_task","ifCompleted","ifSoftDeleted","remove_task","ifEditing","onSubmit","reverse_task","state","editOfTask","type","onChange","setState","target","value","ref","input","nameInput","renderTask","this","focus","React","Component","connect","dispatch","taskId","payload","changedText","changeTo","TaskForm","textInForm","add_task","placeholder","autocomplete","DropdownButton","title","menuAlign","variant","Dropdown","Item","as","change_filter","innerHTML","App","href","window","location","hostname","console","log","tasks","map","task","uuidv4","tasksReducer","JSON","parse","localStorage","getItem","action","newTask","setItem","stringify","find","filter","laststatus","x","filterReducer","rootReducer","combineReducers","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.18168875.chunk.js","sourcesContent":["import React from 'react'\r\nimport { remove_task, edit_task, reverse_task, change_task } from './actions'\r\nimport './index.css';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nclass Task extends React.Component{\r\n    constructor({ status, text, id, filterOfTasks }) {\r\n        super()\r\n        this.state = {\r\n            editOfTask : ''\r\n        }\r\n    }\r\n    ifNothing = () => {\r\n        return (\r\n            <div className=\"w-full font-semibold text-black pb-8 pl-1\">\r\n                <p>{this.props.text}</p>\r\n                <button onClick={e => { e.preventDefault();this.props.change_task(this.props.id, 'completed') }}\r\n                    className=\"float-right pl-1 pr-1 p-px rounded-lg text-black font-semibold bg-green-500 mr-2 hover:text-white \" >complete</button>\r\n                <button class = \"edit_button\" onClick={e => { e.preventDefault(); this.props.edit_task(this.props.id) }}\r\n                     >edit</button>\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n\r\n    ifCompleted = () => {\r\n        return (\r\n            <div className=\"w-full text-green-600 font-semibold pb-8 pl-1\">\r\n                <p>{this.props.text}</p>\r\n                <button onClick={e => { e.preventDefault(); this.props.change_task(this.props.id, 'softdeleted') }}\r\n                    className=\"float-right p-px pl-1 pr-1 rounded-lg text-black font-semibold mr-4 bg-red-500 hover:text-white\" >delete</button>\r\n                <button class = \"edit_button\" onClick={e => { e.preventDefault(); this.props.edit_task(this.props.id) }}\r\n                     >edit</button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    ifSoftDeleted = () => {\r\n        return (\r\n            <div className=\"w-full font-semibold text-black pb-8 pl-1\">\r\n                <p className=\"line-through text-red-600\">{this.props.text}</p>\r\n                <button onClick={e => { e.preventDefault(); this.props.remove_task(this.props.id) }}\r\n                    className=\"float-right hover:text-white bg-purple-700 rounded-lg font-semibold p-px pl-2 pr-2\" >remove</button>\r\n                <button class = \"edit_button\" onClick={e => { e.preventDefault(); this.props.edit_task(this.props.id) }}\r\n                     >edit</button>\r\n            </div>\r\n        )\r\n\r\n\r\n    }\r\n    componentDidMount(){\r\n    if(this.props.status=='edit'){\r\n        this.nameInput.focus(); \r\n        } \r\n     }\r\n\r\n    ifEditing = () => {\r\n        return(\r\n            <form onSubmit={e => {e.preventDefault(); this.props.reverse_task(this.props.id, (this.state.editOfTask=='') ? null : this.state.editOfTask)}} className = \"text-black\">\r\n                <input type='text' onChange={(e) => this.setState({editOfTask: e.target.value})} value = {this.state.editOfTask} ref={(input)=>{this.nameInput = input}} className=\"rounded-lg outline-none mt-1 pl-1 focus:ring-2 focus:ring-red-600\"/>\r\n            </form>\r\n \r\n        )\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    renderTask = () => {\r\n        if (this.props.status === 'completed') {\r\n            if(this.props.filterOfTasks!=='SoftDeleted' && this.props.filterOfTasks!=='To do'){\r\n                return (\r\n                    this.ifCompleted())\r\n                }\r\n\r\n        } else if (this.props.status === 'softdeleted') {\r\n            if(this.props.filterOfTasks!=='Completed' && this.props.filterOfTasks!=='To do'){\r\n            return (\r\n                this.ifSoftDeleted())\r\n            }\r\n\r\n        } else if (this.props.status === 'edit') {\r\n            return(\r\n                this.ifEditing()\r\n                )\r\n\r\n        } else {\r\n            if (this.props.filterOfTasks==='All' || this.props.filterOfTasks==='To do'){\r\n            return (\r\n                this.ifNothing())\r\n        }\r\n    }\r\n}\r\n    render(){\r\n    return (\r\n        <div>\r\n        {this.renderTask()}\r\n        </div>\r\n    )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    filterOfTasks : state.filterOfTasks\r\n  })\r\n\r\n  \r\nconst mapDispatchToProps = dispatch => ({\r\n    remove_task: taskId => dispatch(remove_task(taskId)),\r\n    reverse_task: (taskId, changedText) => dispatch(reverse_task(taskId, changedText)),\r\n    edit_task: taskId => dispatch(edit_task(taskId)),\r\n    change_task: (taskId, changeTo) => dispatch(change_task(taskId, changeTo)),\r\n  })\r\n  \r\n  export default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(Task);\r\n  ","export const add_task = (text) => {\r\n    return {\r\n        type: 'ADD_TASK',\r\n        payload: text\r\n    }\r\n}\r\n\r\nexport const remove_task = (taskId) => {\r\n    return {\r\n        type: 'REMOVE_TASK',\r\n        payload: taskId\r\n    }\r\n}\r\n\r\n\r\nexport const edit_task = (taskId) => {\r\n    return {\r\n        type: 'EDIT_TASK',\r\n        payload: taskId\r\n    }\r\n}\r\n\r\nexport const reverse_task = (taskId, changedText) => {\r\n    return {\r\n        type: 'REVERSE_TASK',\r\n        payload: {taskId, changedText}\r\n    }\r\n}\r\n\r\nexport const change_task = (taskId, changeTo) => {\r\n    return {\r\n        type: 'CHANGE_TASK',\r\n        payload: {taskId, changeTo}\r\n    }\r\n}\r\n\r\nexport const change_filter = (changeTo) => {\r\n    return {\r\n        type: 'CHANGE_FILTER',\r\n        payload: {changeTo}\r\n    }\r\n}","import React from 'react'\r\nimport { add_task, change_filter } from './actions' \r\nimport { DropdownButton, Dropdown } from 'react-bootstrap'\r\nimport { connect } from 'react-redux';\r\n\r\nclass TaskForm extends React.Component {\r\n    constructor(props) {\r\n        super()\r\n        this.state = {\r\n            textInForm: ''\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n        <div>\r\n            <form onSubmit={(e) => { e.preventDefault(); this.props.add_task(this.state.textInForm); this.setState({textInForm : ''});}} className=\"w-full bg-yellow-400\">\r\n                <input type=\"Text\" placeholder='What to do next?' value={this.state.textInForm} onChange={(e) => this.setState({textInForm : e.target.value})} id='task_input' autocomplete=\"off\" ></input>\r\n            </form>\r\n            <div className=\"bg-yellow-400 \">\r\n                <DropdownButton title={this.props.filterOfTasks} menuAlign=\"left\" id=\"filter_dropdown\" variant=\" pl-1 font-semibold hover:text-white\">\r\n                    <Dropdown.Item as=\"button\" className=\" pl-1 pr-1 bg-yellow-400 font-semibold hover:text-white\" onClick={e => { this.props.change_filter(e.target.innerHTML ) }}>All</Dropdown.Item>\r\n                    <Dropdown.Item as=\"button\" className=\"pr-1 bg-yellow-400 text-green-600 font-semibold hover:text-white\" onClick={e => { this.props.change_filter(e.target.innerHTML ) }}>Completed</Dropdown.Item>\r\n                    <Dropdown.Item as=\"button\" className=\"bg-yellow-400 font-semibold line-through hover:text-white text-red-600\" onClick={e => { this.props.change_filter(e.target.innerHTML ) }}>SoftDeleted</Dropdown.Item>\r\n                    <Dropdown.Item as=\"button\" className=\"bg-yellow-400 pl-1 text-purple-600 font-semibold  hover:text-white\" onClick={e => { this.props.change_filter(e.target.innerHTML ) }}>To do</Dropdown.Item>\r\n                </DropdownButton>\r\n            </div>\r\n        </div>)\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    filterOfTasks: state.filterOfTasks\r\n  })\r\n  \r\n  const mapDispatchToProps = dispatch => ({\r\n    add_task: text => dispatch(add_task(text)),\r\n    change_filter: text => dispatch(change_filter(text))\r\n  })\r\n  \r\n  export default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(TaskForm);\r\n  ","import React from 'react'\r\nimport Task from './Task.js'\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport TaskForm from './TaskForm.js'\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nclass App extends React.Component {\r\n  constructor(props){\r\n    super()\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"h-screen overflow-hidden\">\r\n        <header className=\"bg-yellow-400 grid place-items-center\" >\r\n          <a href={window.location.hostname}>\r\n            <h1 className=\"font-mono font-bold text-4xl\">TO-DO LIST</h1>\r\n          </a>\r\n          <h4>by Pluvas</h4>\r\n        </header>\r\n        <div className=\"grid place-items-center bg-gray-900 h-full w-screen break-words\">\r\n          <div className=\"h-3/5 w-4/5 lg:w-2/5 sm:3/5 bg-gray-200 overflow-y-auto\">\r\n            <TaskForm />\r\n            {console.log(this.props.tasks)}\r\n            {this.props.tasks.map(task =>{if(task!==null){return <Task text={task.text} status={task.status} id={task.id} key={uuidv4()} />}})}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n \r\nconst mapStateToProps = state => ({\r\n  tasks: state.tasks\r\n})\r\n\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  null\r\n)(App);\r\n","import { v4 as uuidv4 } from 'uuid';\r\n//\r\nconst tasksReducer = (state = JSON.parse(localStorage.getItem('tasks'))||[], action) => {\r\n    let newTask = {}\r\n    let task;\r\n    switch(action.type){\r\n        case 'ADD_TASK':\r\n            newTask = {status:'new', text: action.payload, id: uuidv4()}\r\n            //console.log(state)\r\n            localStorage.setItem('tasks', JSON.stringify([...state, newTask]))\r\n            return [...state, newTask] \r\n\r\n        case 'CHANGE_TASK':\r\n            newTask = state.find(task => task.id === action.payload.taskId)\r\n            newTask.status = action.payload.changeTo\r\n\r\n            localStorage.setItem('tasks', JSON.stringify(JSON.parse(localStorage.getItem('tasks')).filter(task => task.id !== action.payload.taskId)))\r\n            localStorage.setItem('tasks', JSON.stringify([...JSON.parse(localStorage.getItem('tasks')), newTask]))\r\n            return [...state.filter(task => task.id !== action.payload.taskId), newTask]\r\n\r\n        case 'REMOVE_TASK':\r\n            localStorage.setItem('tasks', JSON.stringify(JSON.parse(localStorage.getItem('tasks')).filter(task => task.id !== action.payload)))\r\n            return state.filter(task => task.id !== action.payload)\r\n\r\n        case 'EDIT_TASK':\r\n            return state.map(task => {\r\n                if(task.id === action.payload){\r\n                    task.laststatus = task.status\r\n                    task.status = 'edit'\r\n                    localStorage.setItem('tasks', JSON.stringify(JSON.parse(localStorage.getItem('tasks')).filter(x => x.id !== action.payload)))\r\n                    return task\r\n                } \r\n                return task;\r\n             })\r\n\r\n\r\n        case 'REVERSE_TASK':\r\n            return state.map(task => {\r\n                if (task.id === action.payload.taskId){\r\n                    task.status = task.laststatus\r\n                    task.text = (action.payload.changedText==null) ? newTask.text : action.payload.changedText\r\n                    localStorage.setItem('tasks', JSON.stringify([...JSON.parse(localStorage.getItem('tasks')), task]))\r\n                    return task\r\n                }\r\n\r\n                return task;\r\n            })\r\n\r\n\r\n\r\n            \r\n\r\n        \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport default tasksReducer","const filterReducer = (state = 'All', action) =>{\r\n    switch(action.type){\r\n        case 'CHANGE_FILTER':\r\n            return state = action.payload.changeTo\r\n        default:\r\n            return state\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport default filterReducer","import tasksReducer from './tasksReducer.js'\r\nimport filterReducer from './filterReducer.js'\r\nimport { combineReducers } from 'redux'\r\n\r\nconst rootReducer = combineReducers({\r\n    tasks : tasksReducer,\r\n    filterOfTasks: filterReducer\r\n})\r\n\r\nexport default rootReducer","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { createStore } from'redux'\r\nimport rootReducer from './reducers'\r\nimport { Provider } from 'react-redux'\r\n\r\n\r\nconst store = createStore(rootReducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\n\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n"],"sourceRoot":""}